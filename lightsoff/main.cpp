#include <QApplication>
#include <QWidget>
#include <QVBoxLayout>
#include <QHBoxLayout>
#include <QGridLayout>
#include <QLabel>
#include <QPushButton>
#include <QStyle>
#include <QStyleFactory>
#include <qcontainerfwd.h>
#include <qstylefactory.h>
#include <string_view>

class GameWindow : public QWidget
{
  Q_OBJECT
// mostly generated by ai
public:
  constexpr static std::string_view bluestyle {
  "background-color: darkblue;"
    "width: 50px;"
    "height: 50px;"
  };
  constexpr static std::string_view redstyle {
  "background-color: red;"
    "width: 50px;"
    "height: 50px;"
  };
  GameWindow( QWidget* parent = nullptr ) : QWidget( parent )
  {
    // 设置窗口样式为Fusion
//    QApplication::setStyle(QStyleFactory::create("Fusion"));
    // 设置窗口背景颜色为黑色
//    this->setStyleSheet("background-color: black;");

    // 创建主布局
    QVBoxLayout* mainLayout = new QVBoxLayout( this );

    // 创建水平布局包含关卡按钮、关卡显示和菜单按钮
    QHBoxLayout* headerLayout = new QHBoxLayout();

    // 创建“Change Puzzle”按钮
    QPushButton* changePuzzleButton = new QPushButton( "Change Puzzle", this );

    // 创建关卡显示标签
    QLabel* puzzleLabel = new QLabel( "Puzzle 76", this );
    puzzleLabel->setAlignment( Qt::AlignCenter );

    // 创建积分标签和菜单按钮
    QLabel* scoreLabel = new QLabel( "24", this );
    QPushButton* menuButton = new QPushButton( this );
    menuButton->setText( "☰" );

    // 将元素添加到水平布局中
    headerLayout->addWidget( changePuzzleButton );
    headerLayout->addStretch(); // 添加拉伸元素使关卡显示标签居中
    headerLayout->addWidget( puzzleLabel );
    headerLayout->addStretch(); // 添加拉伸元素使积分和菜单按钮靠右
    headerLayout->addWidget( scoreLabel );
    headerLayout->addWidget( menuButton );

    // 将水平布局添加到主布局中
    mainLayout->addLayout( headerLayout );

    // 创建5x5网格按钮布局
    QGridLayout* gridLayout = new QGridLayout();
    gridLayout->setSpacing( 5 ); // 设置格子之间的间距

    for ( int i = 0; i < 5; ++i ) {
      for ( int j = 0; j < 5; ++j ) {
        QPushButton* button = new QPushButton( this );
        button->setStyleSheet(redstyle.data());
        gridLayout->addWidget( button, i, j );
      }
    }

    // 添加网格布局到主布局
    mainLayout->addLayout( gridLayout );

    // 设置窗口大小和标题
    setFixedSize( 400, 500 );
    setWindowTitle( "" );
  }
};

int main( int argc, char* argv[] )
{
  QApplication app( argc, argv );
  GameWindow window;
  window.show();
  return app.exec();
}

#include "main.moc"
